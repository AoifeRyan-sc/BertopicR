% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_topics.R
\name{bt_update_topics}
\alias{bt_update_topics}
\title{Update Topic Representations}
\usage{
bt_update_topics(
  fitted_model,
  documents,
  new_topics,
  vecotizer_model = NULL,
  cftidf_model = NULL
)
}
\arguments{
\item{fitted_model}{Output of bt_fit_model() or another bertopic topic model. The model must have been fitted to data.}

\item{documents}{documents to which the model was fit}

\item{new_topics}{Topics to update model with}

\item{vectorizer_model}{Model for vectorizing input for topic representations (Python object)}

\item{ctfidf_model}{Model for performing class-based tf-idf (ctf-idf) (Python object)}
}
\value{
the updated model
}
\description{
updates topics and their representations to be based on the document-topic
classification described in the list of new_topics. As when initiating the model
with bt_compile_model, if you want to manipulate the topic representations you
must use a vectorizer/ctfidf model, these can be the same as those used in
bt_compile_model.

NOTE: The bertopic model you are working with is a pointer to a python object
at a point in memory. This means that the input and the output model cannot be
differentiated between without explicitly saving the model before performing
this operation. A model is returned out of convention, in reality, the function
is applied to and changes the input model. The input model will be the same as
the output model after the operation has been performed.
}
